
import { GoogleGenAI, Modality } from "@google/genai";
import { ImageData } from '../types';

if (!process.env.API_KEY) {
  throw new Error("API_KEY is not set in environment variables.");
}

const ai = new GoogleGenAI({ apiKey: process.env.API_KEY });

export const generateHuggingImage = async (image1: ImageData, image2: ImageData): Promise<string> => {
  try {
    const response = await ai.models.generateContent({
      model: 'gemini-2.5-flash-image',
      contents: {
        parts: [
          {
            inlineData: {
              data: image1.data,
              mimeType: image1.mimeType,
            },
          },
          {
            inlineData: {
              data: image2.data,
              mimeType: image2.mimeType,
            },
          },
          {
            text: 'Generate a new, photorealistic image showing the people from these two images hugging each other. The final image should look natural and seamless, blending the styles and subjects into a single coherent scene.',
          },
        ],
      },
      config: {
          responseModalities: [Modality.IMAGE],
      },
    });

    if (response?.candidates?.[0]?.content?.parts) {
        for (const part of response.candidates[0].content.parts) {
            if (part.inlineData) {
                const base64ImageBytes: string = part.inlineData.data;
                const mimeType = part.inlineData.mimeType;
                const imageUrl = `data:${mimeType};base64,${base64ImageBytes}`;
                return imageUrl;
            }
        }
    }
    
    throw new Error("No image was generated by the API.");

  } catch (error) {
    console.error("Error generating image:", error);
    if (error instanceof Error) {
        throw new Error(`Failed to generate image: ${error.message}`);
    }
    throw new Error("Failed to generate image. Please check the console for details.");
  }
};
